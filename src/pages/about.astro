---
import BaseLayout from "../layouts/BaseLayout.astro";

const pageTitle = "About Me";

const identity = {
  firstName: "Cody",
  country: "United States",
  occupation: "CS Student",
  hobbies: ["3D Modeling", "Web-design", "Gaming"],
};

const skills = ["HTML", "CSS", "Javascript", "Java", "C++", "SQL"];

const skillColor = "#6f3ab0";
const fontWeight = "bold";
const textCase = "capitalize";
---

<BaseLayout pageTitle={pageTitle}>
  <p>
    I'm a student at Eastern Washington University. I enjoy learning new
    frameworks so I decided to make an <a>Astro</a> website about
    <a>Astro</a>nomy! Get it?
    <a id="toggleText" class="clickable-text">(Explanation provided here)</a>
  </p>
  <p class="joke" id="detailedExplanation" style="display: none;">
    Here we have a charming blend of linguistic serendipity. When the jest
    playfully announces, "I decided to make an Astro website about Astronomy,"
    it's a whimsical twist that exaggerates the obvious connection between
    "Astro" and "astronomy." The magic of the joke rests upon the delightful
    overlap between "astro" which serves as the prefix for all things astral,
    Simultaneously, in the realm of technology, "Astro" is akin to the
    scaffolding that supports the architecture of web developmentâ€”otherwise
    known as a "framework."
  </p>

  <ul>
    <li>My name is {identity.firstName}.</li>
    <li>
      I live in {identity.country} and I'm currently a {identity.occupation}.
    </li>
    {
      identity.hobbies.length >= 2 && (
        <li>
          Two of my hobbies are: {identity.hobbies[0]} and {identity.hobbies[1]}
        </li>
      )
    }
  </ul>
  <p>Some of my skills are:</p>
  <ul>
    {skills.map((skill) => <li class="skill">{skill}</li>)}
  </ul>
</BaseLayout>

<style define:vars={{ skillColor, fontWeight, textCase }}>
  h1 {
    color: #7838c7;
    font-size: 4rem;
  }
  .skill {
    color: var(--skillColor);
    font-weight: var(--fontWeight);
    text-transform: var(--textCase);
  }
  a {
    font-weight: bold;
    font-style: italic;
    color: white;
  }

  .clickable-text {
    font-size: 14px;
    cursor: pointer;
  }

  .clickable-text:hover {
    color: var(--skillColor); /* Change the color on hover */
  }

  .joke {
    color: white;
    font-size: 14px;
    font-style: italic;
    padding-bottom: 20px;
  }
</style>

<script src="../scripts/toggleText.js"></script>
